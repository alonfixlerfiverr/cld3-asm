import { BaseAsmModule } from 'emscripten-wasm-loader';
import { LanguageCode } from './languageCode';

export interface LanguageResult {
  /**
   * Detected language. {UnknownLanguage} if detection fails.
   */
  language: LanguageCode;
  /**
   * Language probability.
   */
  probability: number;
  /**
   * Whether the prediction is reliable.
   */
  is_reliable: boolean;
  /**
   * Proportion of bytes associated with the language. If FindLanguage is
   * called, this variable is set to 1.
   */
  proportion: number;
}

/**
 * @internal
 *
 * Interface for module generated by emscripten to load wasm binary.
 * https://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html
 */
export interface CldAsmModule extends Required<BaseAsmModule> {
  allocateUTF8: (str: string) => number;
  setValue: (ptr: number, value: any, type: 'i8' | 'i16' | 'i32' | 'i64' | 'float' | 'double' | '*') => void;
  initializeRuntime(): Promise<boolean>;
}
